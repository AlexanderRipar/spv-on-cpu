	
instructions : [
	{
		opcode : 0
		name : "Nop"
		args : [
		]
	}
	{
		opcode : 1
		name : "Undef"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 321
		name : "Sizeof"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 5630
		name : "AssumeTrueKHR"
		args : [
			ID "Condition"
		]
	}
	{
		opcode : 5631
		name : "ExpectKHR"
		args : [
			RTYPE
			RST
			ID "Value"
			ID "ExpectedValue"
		]
	}
	{
		opcode : 2
		name : "SourceContinued"
		args : [
			STR "Source"
		]
	}
	{
		opcode : 3
		name : "Source"
		args : [
			SOURCELANGUAGE
			U32 "Version"
			OPT STR "File"
			OPT STR "Source"
		]
	}
	{
		opcode : 4
		name : "SourceExtension"
		args : [
			STR "Extension"
		]
	}
	{
		opcode : 5
		name : "Name"
		args : [
			ID "Target"
			STR "Name"
		]
	}
	{
		opcode : 6
		name : "MemberName"
		args : [
			TYPID "Type"
			MEMBER "Member"
			STR "Name"
		]
	}
	{
		opcode : 7
		name : "String"
		args : [
			RST
			STR
		]
	}
	{
		opcode : 8
		name : "Line"
		args : [
			ID "Filename"
			U32 "Line"
			U32 "Column"
		]
	}
	{
		opcode : 317
		name : "NoLine"
		args : [
		]
	}
	{
		opcode : 330
		name : "ModuleProcessed"
		args : [
			STR "Process"
		]
	}
	{
		opcode : 71
		name : "Decorate"
		args : [
			ID "Target"
			DECORATION
			OPT VAR ARG
		]
	}
	{
		opcode : 72
		name : "MemberDecorate"
		args : [
			TYPID
			MEMBER
			DECORATION
			OPT VAR ARG
		]
	}
	{
		opcode : 73
		name : "DecorationGroup"
		args : [
			RST
		]
	}
	{
		opcode : 74
		name : "GroupDecorate"
		args : [
			ID "Group"
			ID "Targets"
		]
	}
	{
		opcode : 75
		name : "GroupMemberDecorate"
		args : [
			VAR LITERALIDPAIR
		]
	}
	{
		opcode : 332
		name : "DecorateId"
		args : [
			ID "Target"
			DECORATION
			OPT VAR ARG
		]
	}
	{
		opcode : 5632
		name : "DecorateString"
		args : [
			ID "Target"
			DECORATION
			VAR STR "Args"
		]
	}
	{
		opcode : 5633
		name : "MemberDecorateString"
		args : [
			TYPID
			MEMBER
			DECORATION
			VAR STR "Args"
		]
	}
	{
		opcode : 10
		name : "Extension"
		args : [
			STR "Name"
		]
	}
	{
		opcode : 11
		name : "ExtInstImport"
		args : [
			RST
			STR "InstructionName"
		]
	}
	{
		opcode : 12
		name : "ExtInst"
		args : [
			RTYPE
			RST
			ID "Set"
			U32 "Instruction"
			OPT VAR ARG
		]
	}
	{
		opcode : 14
		name : "MemoryModel"
		args : [
			ADDRESSINGMODEL
			MEMORYMODEL
		]
	}
	{
		opcode : 15
		name : "EntryPoint"
		args : [
			EXECUTIONMODEL
			ID "EntryPoint"
			STR "Name"
			OPT VAR ID "Interface"
		]
	}
	{
		opcode : 16
		name : "ExecutionMode"
		args : [
			ID "EntryPoint"
			EXECUTIONMODE
			OPT VAR LITERAL "Args"
		]
	}
	{
		opcode : 17
		name : "Capability"
		args : [
			CAPABILITY
		]
	}
	{
		opcode : 331
		name : "ExecutionModeId"
		args : [
			ID "EntryPoint"
			EXECUTIONMODE
			VAR ID "Args"
		]
	}
	{
		opcode : 19
		name : "TypeVoid"
		args : [
			RST
		]
	}
	{
		opcode : 20
		name : "TypeBool"
		args : [
			RST
		]
	}
	{
		opcode : 21
		name : "TypeInt"
		args : [
			RST
			U32 "Width"
			U32 "Signedness"
		]
	}
	{
		opcode : 22
		name : "TypeFloat"
		args : [
			RST
			U32 "Width"
		]
	}
	{
		opcode : 23
		name : "TypeVector"
		args : [
			RST
			TYPID "ComponentType"
			U32 "ComponentCount"
		]
	}
	{
		opcode : 24
		name : "TypeMatrix"
		args : [
			RST
			TYPID "ColumnType"
			U32 "ColumnCount"
		]
	}
	{
		opcode : 25
		name : "TypeImage"
		args : [
			RST
			TYPID "SampledType"
			DIM
			U32 "Depth"
			U32 "Arrayed"
			U32 "Multisampled"
			U32 "Sampled"
			IMAGEFORMAT
			OPT ACCESSQUALIFIER
		]
	}
	{
		opcode : 26
		name : "TypeSampler"
		args : [
			RST
		]
	}
	{
		opcode : 27
		name : "TypeSampledImage"
		args : [
			RST
			TYPID "ImageType"
		]
	}
	{
		opcode : 28
		name : "TypeArray"
		args : [
			RST
			TYPID "ElemType"
			ID "Length"
		]
	}
	{
		opcode : 29
		name : "TypeRuntimeArray"
		args : [
			RST
			TYPID "ElemType"
		]
	}
	{
		opcode : 30
		name : "TypeStruct"
		args : [
			RST
			OPT VAR TYPID "Members"
		]
	}
	{
		opcode : 31
		name : "TypeOpaque"
		args : [
			RST
			STR "TypeName"
		]
	}
	{
		opcode : 32
		name : "TypePointer"
		args : [
			RST
			STORAGECLASS
			TYPID "Pointee"
		]
	}
	{
		opcode : 33
		name : "TypeFunction"
		args : [
			RST
			TYPID "ReturnType"
			OPT VAR TYPID "ArgTypes"
		]
	}
	{
		opcode : 34
		name : "TypeEvent"
		args : [
			RST
		]
	}
	{
		opcode : 35
		name : "TypeDeviceEvent"
		args : [
			RST
		]
	}
	{
		opcode : 36
		name : "TypeReserveId"
		args : [
			RST
		]
	}
	{
		opcode : 37
		name : "TypeQueue"
		args : [
			RST
		]
	}
	{
		opcode : 38
		name : "TypePipe"
		args : [
			RST
			ACCESSQUALIFIER
		]
	}
	{
		opcode : 39
		name : "TypeForwardPointer"
		args : [
			TYPID "PointerType"
			STORAGECLASS
		]
	}
	{
		opcode : 322
		name : "TypePipeStorage"
		args : [
			RST
		]
	}
	{
		opcode : 327
		name : "TypeNamedBarrier"
		args : [
			RST
		]
	}
	{
		opcode : 6086
		name : "TypeBufferSurfaceINTEL"
		args : [
			RST
			ACCESSQUALIFIER
		]
	}
	{
		opcode : 6090
		name : "TypeStructContinuedINTEL"
		args : [
			VAR TYPID "MemberTypes"
		]
	}
	{
		opcode : 41
		name : "ConstantTrue"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 42
		name : "ConstantFalse"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 43
		name : "Constant"
		args : [
			RTYPE
			RST
			LITERAL "Value"
		]
	}
	{
		opcode : 44
		name : "ConstantComposite"
		args : [
			RTYPE
			RST
			VAR ID "Constituents"
		]
	}
	{
		opcode : 45
		name : "ConstantSampler"
		args : [
			RTYPE
			RST
			SAMPLERADDRESSINGMODE
			U32 "Param"
			SAMPLERFILTERMODE
		]
	}
	{
		opcode : 46
		name : "ConstantNull"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 48
		name : "SpecConstantTrue"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 49
		name : "SpecConstantFalse"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 50
		name : "SpecConstant"
		args : [
			RTYPE
			RST
			LITERAL "Value"
		]
	}
	{
		opcode : 51
		name : "SpecConstantComposite"
		args : [
			RTYPE
			RST
			VAR ID "Constituents"
		]
	}
	{
		opcode : 52
		name : "SpecConstantOp"
		args : [
			RTYPE
			RST
			U32 "Opcode"
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 6091
		name : "ConstantCompositeContinuedINTEL"
		args : [
			VAR ID "Constituents"
		]
	}
	{
		opcode : 6092
		name : "SpecConstantCompositeContinuedINTEL"
		args : [
			VAR ID "Constituents"
		]
	}
	{
		opcode : 59
		name : "Variable"
		args : [
			RTYPE
			RST
			STORAGECLASS
			OPT ID "Initializer"
		]
	}
	{
		opcode : 60
		name : "ImageTexelPointer"
		args : [
			RTYPE
			RST
			TYPID "Image"
			ID "Coordinate"
			ID "Sample"
		]
	}
	{
		opcode : 61
		name : "Load"
		args : [
			RTYPE
			RST
			ID "Pointer"
			OPT MEMORYOPERANDS
		]
	}
	{
		opcode : 62
		name : "Store"
		args : [
			ID "Pointer"
			ID "Object"
			OPT MEMORYOPERANDS
		]
	}
	{
		opcode : 63
		name : "CopyMemory"
		args : [
			ID "Target"
			ID "Source"
			OPT MEMORYOPERANDS
			OPT MEMORYOPERANDS
		]
	}
	{
		opcode : 64
		name : "CopyMemorySized"
		args : [
			ID "Target"
			ID "Source"
			ID "Size"
			OPT MEMORYOPERANDS
			OPT MEMORYOPERANDS
		]
	}
	{
		opcode : 65
		name : "AcessChain"
		args : [
			RTYPE
			RST
			ID "Base"
			VAR ID "Indices"
		]
	}
	{
		opcode : 66
		name : "InBoundsAccessChain"
		args : [
			RTYPE
			RST
			ID "Base"
			VAR ID "Indices"
		]
	}
	{
		opcode : 67
		name : "OpPtrAcessChain"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Element"
			VAR ID "Indices"
		]
	}
	{
		opcode : 68
		name : "ArrayLength"
		args : [
			RTYPE
			RST
			TYPID "Structure"
			MEMBER
		]
	}
	{
		opcode : 69
		name : "GenericPtrMemSemantics"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 70
		name : "InBoundsPtrAccessChain"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Element"
			VAR ID "Indices"
		]
	}
	{
		opcode : 401
		name : "PtrEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 402
		name : "PtrNotEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 403
		name : "PtrDiff"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 54
		name : "Function"
		args : [
			RTYPE
			RST
			FUNCTIONCONTROL
			TYPID "FunctionType"
		]
	}
	{
		opcode : 55
		name : "FunctionParameter"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 56
		name : "FunctionEnd"
		args : [
		]
	}
	{
		opcode : 57 
		name : "FunctionCall"
		args : [
			RTYPE
			RST
			ID "Function"
			OPT VAR ID "Args"
		]
	}
	{
		opcode : 86
		name : "SampledImage"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Sampler"
		]
	}
	{
		opcode : 87
		name : "ImageSampleImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 88
		name : "ImageSampleExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 89
		name : "ImageSampleDrefImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 90
		name : "ImageSampleDrefExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 91
		name : "ImageSampleProjImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 92
		name : "ImageSampleProjExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID  "Coordinate"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 93
		name : "ImageSampleProjDrefImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 94
		name : "ImageSampleProjDrefExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 95
		name : "ImageFetch"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 96
		name : "ImageGather"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Component"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 97
		name : "ImageDrefGather"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 98
		name : "ImageRead"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 99
		name : "ImageWrite"
		args : [
			ID "Image"
			ID "Coordinate"
			ID "Texel"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 100
		name : "Image"
		args : [
			RTYPE
			RST
			ID "SampledImage"
		]
	}
	{
		opcode : 101
		name : "ImageQueryFormat"
		args : [
			RTYPE
			RST
			ID "Image"
		]
	}
	{
		opcode : 102
		name : "ImageQueryOrder"
		args : [
			RTYPE
			RST
			ID "Image"
		]
	}
	{
		opcode : 103
		name : "ImageQuerySizeLod"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Lod"
		]
	}
	{
		opcode : 104
		name : "ImageQuerySize"
		args : [
			RTYPE
			RST
			ID "Image"
		]
	}
	{
		opcode : 105
		name : "ImageQueryLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
		]
	}
	{
		opcode : 106
		name : "ImageQueryLevels"
		args : [
			RTYPE
			RST
			ID "Image"
		]
	}
	{
		opcode : 107
		name : "ImageQuerySamples"
		args : [
			RTYPE
			RST
			ID "Image"
		]
	}
	{
		opcode : 305
		name : "ImageSparseSampleImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 306
		name : "ImageSparseSampleImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 307
		name : "ImageSparseSampleDrefImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 308
		name : "ImageSparseSampleDrefExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 309
		name : "ImageSparseSampleProjImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 310
		name : "ImageSparseSampleProjExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 311
		name : "ImageSparseSampleProjDrefImplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 312
		name : "ImageSparseSampleProjDrefExplicitLod"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			IMAGEOPERANDS
			VAR ID "Operands"
		]
	}
	{
		opcode : 313
		name : "ImageSparseFetch"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 314
		name : "ImageSparseGather"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Component"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 315
		name : "ImageSparseDrefGather"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Dref"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 316
		name : "ImageSparseTexelResident"
		args : [
			RTYPE
			RST
			ID "ResidentCode"
		]
	}
	{
		opcode : 320
		name : "ImageSparseRead"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 5283
		name : "ImageSampleFootprintNV"
		args : [
			RTYPE
			RST
			ID "SampledImage"
			ID "Coordinate"
			ID "Granularity"
			ID "Coarse"
			OPT IMAGEOPERANDS
			OPT VAR ID "Operands"
		]
	}
	{
		opcode : 109
		name : "ConvertFToU"
		args : [
			RTYPE
			RST
			ID "FloatValue"
		]
	}
	{
		opcode : 110
		name : "ConvertFToS"
		args : [
			RTYPE
			RST
			ID "FloatValue"
		]
	}
	{
		opcode : 111
		name : "ConvertSToF"
		args : [
			RTYPE
			RST
			ID "SignedValue"
		]
	}
	{
		opcode : 112
		name : "ConvertUToF"
		args : [
			RTYPE
			RST
			ID "UnsignedValue"
		]
	}
	{
		opcode : 113
		name : "UConvert"
		args : [
			RTYPE
			RST
			ID "UnsignedValue"
		]
	}
	{
		opcode : 114
		name : "SConvert"
		args : [
			RTYPE
			RST
			ID "SignedValue"
		]
	}
	{
		opcode : 115
		name : "FConvert"
		args : [
			RTYPE
			RST
			ID "FloatValue"
		]
	}
	{
		opcode : 116
		name : "QuantizeToF16"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 117
		name : "ConvertPtrToU"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 118
		name : "SatConvertSToU"
		args : [
			RTYPE
			RST
			ID "SignedValue"
		]
	}
	{
		opcode : 119
		name : "SatConvertUToS"
		args : [
			RTYPE
			RST
			ID "UnsignedValue"
		]
	}
	{
		opcode : 120
		name : "ConvertUToPtr"
		args : [
			RTYPE
			RST
			ID "IntegerValue"
		]
	}
	{
		opcode : 121
		name : "PtrCastToGeneric"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 122
		name : "GenericCastToPtr"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 123
		name : "GenericCastToPtrExplicit"
		args : [
			RTYPE
			RST
			ID "Pointer"
			STORAGECLASS
		]
	}
	{
		opcode : 124
		name : "Bitcast"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 77
		name : "VectorExtractDynamic"
		args : [
			RTYPE
			RST
			ID "Vector"
			ID "Index"
		]
	}
	{
		opcode : 78
		name : "VectorInsertDynamic"
		args : [
			RTYPE
			RST
			ID "Vector"
			ID "Component"
			ID "Index"
		]
	}
	{
		opcode : 79
		name : "VectorShuffle"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			OPT VAR U32 "Components"
		]
	}
	{
		opcode : 80
		name : "CompositeConstruct"
		args : [
			RTYPE
			RST
			OPT VAR ID "Constituents" 
		]
	}
	{
		opcode : 81
		name : "CompositeExtract"
		args : [
			RTYPE
			RST
			ID "Composite"
			VAR U32 "Indices"
		]
	}
	{
		opcode : 82
		name : "CompositeInsert"
		args : [
			RTYPE
			RST
			ID "Object"
			ID "Composite"
			VAR U32 "Indices"
		]
	}
	{
		opcode : 83
		name : "CpoyObject"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 84
		name : "Transpose"
		args : [
			RTYPE
			RST
			ID "Matrix"
		]
	}
	{
		opcode : 400
		name : "CopyLogical"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 126
		name : "SNegate"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 127
		name : "FNegate"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 128
		name : "IAdd"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 129
		name : "FAdd"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 130
		name : "ISub"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 131
		name : "FSub"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 132
		name : "IMul"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 133
		name : "FMul"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 134
		name : "UDiv"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 135
		name : "SDiv"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 136
		name : "FDiv"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 137
		name : "UMod"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 138
		name : "SRem"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 139
		name : "SMod"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 140
		name : "FRem"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 141
		name : "FMod"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 142
		name : "VectorTimesScalar"
		args : [
			RTYPE
			RST
			ID "Vector"
			ID "Scalar"
		]
	}
	{
		opcode : 143
		name : "MatrixTimesScalar"
		args : [
			RTYPE
			RST
			ID "Matrix"
			ID "Scalar"
		]
	}
	{
		opcode : 144
		name : "VectorTimesMatrix"
		args : [
			RTYPE
			RST
			ID "Vector"
			ID "Matrix"
		]
	}
	{
		opcode : 145
		name : "MatrixTimesVector"
		args : [
			RTYPE
			RST
			ID "Matrix"
			ID "Vector"
		]
	}
	{
		opcode : 146
		name : "MatrixTimesMatrix"
		args : [
			RTYPE
			RST
			ID "LeftMatrix"
			ID "RightMatrix"
		]
	}
	{
		opcode : 147
		name : "OuterProduct"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
		]
	}
	{
		opcode : 148
		name : "Dot"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
		]
	}
	{
		opcode : 149
		name : "IAddCarry"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 150
		name : "ISubBorrow"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 151
		name : "UMulExtended"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 152
		name : "SMulExtended"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 4450
		name : "SDot"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 4451
		name : "UDot"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 4452
		name : "SUDot"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 4453
		name : "SDotAccSat"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			ID "Accumulator"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 4454
		name : "UDotAccSat"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			ID "Accumulator"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 4455
		name : "SUDotAccSat"
		args : [
			RTYPE
			RST
			ID "Vector1"
			ID "Vector2"
			ID "Accumulator"
			OPT PACKEDVECTORFORMAT
		]
	}
	{
		opcode : 194
		name : "ShiftRightLogical"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Shift"
		]
	}
	{
		opcode : 195
		name : "ShiftRightArithmetic"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Shift"
		]
	}
	{
		opcode : 196
		name : "ShiftLeftLogical"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Shift"
		]
	}
	{
		opcode : 197
		name : "BitwiseOr"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 198
		name : "BitwiseXor"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 199
		name : "BitwiseAnd"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 200
		name : "Not"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 201
		name : "BitFieldInsert"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Insert"
			ID "Offset"
			ID "Count"
		]
	}
	{
		opcode : 202
		name : "BitFieldSExtract"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Offset"
			ID "Count"
		]
	}
	{
		opcode : 203
		name : "BitFieldUExtract"
		args : [
			RTYPE
			RST
			ID "Base"
			ID "Offset"
			ID "Count"
		]
	}
	{
		opcode : 204
		name : "BitReverse"
		args : [
			RTYPE
			RST
			ID "Base"
		]
	}
	{
		opcode : 205
		name : "BitCount"
		args : [
			RTYPE
			RST
			ID "Base"
		]
	}
	{
		opcode : 154
		name : "Any"
		args : [
			RTYPE
			RST
			ID "Vector"
		]
	}
	{
		opcode : 155
		name : "All"
		args : [
			RTYPE
			RST
			ID "Vector"
		]
	}
	{
		opcode : 156
		name : "IsNan"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 157
		name : "IsInf"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 158
		name : "IsFinite"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 159
		name : "IsNormal"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 160
		name : "SignBitSet"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 161
		name : "LessOrGreater"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 162
		name : "Ordered"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 163
		name : "Unordered"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 164
		name : "LogicalEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 165
		name : "LogicalNotEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 166
		name : "LogicalOr"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 167
		name : "LogicalAnd"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 168
		name : "LogicalNot"
		args : [
			RTYPE
			RST
			ID "Operand"
		]
	}
	{
		opcode : 169
		name : "Select"
		args : [
			RTYPE
			RST
			ID "Condition"
			ID "Object1"
			ID "Object2"
		]
	}
	{
		opcode : 170
		name : "IEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 171
		name : "INotEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 172
		name : "UGreaterThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 173
		name : "SGreaterThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 174
		name : "UGreaterThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 175
		name : "SGreaterThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 176
		name : "ULessThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 177
		name : "SLessThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 178
		name : "ULessThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 179
		name : "SLessThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 180
		name : "FOrdEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 181
		name : "FUnordEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 182
		name : "FOrdNotEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 183
		name : "FUnordNotEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 184
		name : "FOrdLessThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 185
		name : "FUnordLessThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 186
		name : "FOrdGreaterThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 187
		name : "FUnordGreaterThan"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 188
		name : "FOrdLessThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 189
		name : "FUnordLessThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 190
		name : "FOrdGreaterThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 191
		name : "FUnordGreaterThanEqual"
		args : [
			RTYPE
			RST
			ID "Operand1"
			ID "Operand2"
		]
	}
	{
		opcode : 207
		name : "DPdx"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 208
		name : "DPdy"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 209
		name : "Fwidth"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 210
		name : "DPdxFine"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 211
		name : "DPdyFine"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 212
		name : "FwidthFine"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 213
		name : "DPdxCoarse"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 214
		name : "DPdyCoarse"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 215
		name : "FwidthCoarse"
		args : [
			RTYPE
			RST
			ID "P"
		]
	}
	{
		opcode : 245
		name : "Phi"
		args : [
			RTYPE
			RST
			VAR ID "TODO"
		]
	}
	{
		opcode : 246
		name : "LoopMerge"
		args : [
			ID "MergeBlock"
			ID "ContinueTarget"
			LOOPCONTROL
			OPT VAR ARG
		]
	}
	{
		opcode : 247
		name : "SelectionMerge"
		args : [
			ID "MergeBlock"
			SELECTIONCONTROL
		]
	}
	{
		opcode : 248
		name : "Label"
		args : [
			RST
		]
	}
	{
		opcode : 249
		name : "Branch"
		args : [
			ID "TargetLabel"
		]
	}
	{
		opcode : 250
		name : "BranchConditional"
		args : [
			ID "Condition"
			ID "TrueLabel"
			ID "FalseLabel"
			OPT U32 "TrueWeigth"
			OPT U32 "FalseWeight"
		]
	}
	{
		opcode : 251
		name : "Switch"
		args : [
			ID "Selector"
			ID "Default"
			OPT VAR LITERALIDPAIR "Targets"
		]
	}
	{
		opcode : 252
		name : "Kill"
		args : [
		]
	}
	{
		opcode : 253 
		name : "Return"
		args : [
		]
	}
	{
		opcode : 254
		name : "ReturnValue"
		args : [
			ID "Value"
		]
	}
	{
		opcode : 255
		name : "Unreachable"
		args : [
		]
	}
	{
		opcode : 256
		name : "LifetimeStart"
		args : [
			ID "Pointer"
			U32 "Size"
		]
	}
	{
		opcode : 257
		name : "LifetimeStop"
		args : [
			ID "Pointer"
			U32 "Size"
		]
	}
	{
		opcode : 4416
		name : "TerminateInvocation"
		args : [
		]
	}
	{
		opcode : 5380
		name : "DemoteToHelperInvocation"
		args : [
		]
	}
	{
		opcode : 227
		name : "AtomicLoad"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 228
		name : "AtomicStore"
		args : [
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 229
		name : "AtomicExchange"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 230
		name : "AtomicCompareExchange"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID "Equal"
			MEMORYSEMANTICSID "Unequal"
			ID "Value"
			ID "Comparator"
		]
	}
	{
		opcode : 231
		name : "AtomicCompareExchangeWeak"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID "Equal"
			MEMORYSEMANTICSID "Unequal"
			ID "Value"
			ID "Comparator"
		]
	}
	{
		opcode : 232
		name : "AtomicIncrement"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 233
		name : "AtomicDecrement"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 234
		name : "AtomicIAdd"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 235
		name : "AtomicISub"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 236
		name : "AtomicSMin"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 237
		name : "AtomicUMin"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 238
		name : "AtomicSMax"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 239
		name : "AtomicUMax"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 240
		name : "AtomicAnd"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 241
		name : "AtomicOr"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 242
		name : "AtomicXor"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 318
		name : "AtomicFlagTestAndSet"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 319
		name : "AtomicFlagClear"
		args : [
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 5614
		name : "AtomicFMinEXT"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 5615
		name : "AtomicFMaxEXT"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 6035
		name : "AtomicFAddEXT"
		args : [
			RTYPE
			RST
			ID "Pointer"
			SCOPEID
			MEMORYSEMANTICSID
			ID "Value"
		]
	}
	{
		opcode : 218
		name : "EmitVertex"
		args : [
		]
	}
	{
		opcode : 219 
		name : "EndPrimitive"
		args : [
		]
	}
	{
		opcode : 220
		name : "EmitStreamVertex"
		args : [
			ID "Stream"
		]
	}
	{
		opcode : 221
		name : "EndStreamPrimitive"
		args : [
			ID "Stream"
		]
	}
	{
		opcode : 224
		name : "ControlBarrier"
		args : [
			SCOPEID "Execution"
			SCOPEID "Memory"
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 225
		name : "MemoryBarrier"
		args : [
			SCOPEID "Memory"
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 328
		name : "NamedBarrierInitialize"
		args : [
			RTYPE
			RST
			ID "SubgroupCount"
		]
	}
	{
		opcode : 329
		name : "MemoryNamedBarrier"
		args : [
			ID "NamedBarrier"
			SCOPEID
			MEMORYSEMANTICSID
		]
	}
	{
		opcode : 259
		name : "GroupAsyncCopy"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Destination"
			ID "Source"
			ID "NumElements"
			ID "Stride"
			ID "Event"
		]
	}
	{
		opcode : 260
		name : "GroupWaitEvents"
		args : [
			SCOPEID
			ID "NumEvents"
			ID "EventsList"
		]
	}
	{
		opcode : 261
		name : "GroupAll"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Predicate"
		]
	}
	{
		opcode : 262
		name : "GroupAny"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Predicate"
		]
	}
	{
		opcode : 263
		name : "GroupBroadcast"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "LocalId"
		]
	}
	{
		opcode : 264
		name : "GroupIAdd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 265
		name : "GroupFAdd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 266
		name : "GroupFMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 267
		name : "GroupUMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 268
		name : "GroupSMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 269
		name : "GroupFMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 270
		name : "GroupUMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 271
		name : "GroupSMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 4421
		name : "SubgroupBallotKHR"
		args : [
			RTYPE
			RST
			ID "Predicate"
		]
	}
	{
		opcode : 4422
		name : "SubgroupFirstInvocationKHR"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
	{
		opcode : 4428
		name : "SubgroupAllKHR"
		args : [
			RTYPE
			RST
			ID "Predicate"
		]
	}
	{
		opcode : 4429
		name : "SubgroupAnyKHR"
		args : [
			RTYPE
			RST
			ID "Predicate"
		]
	}
	{
		opcode : 4430
		name : "SubgroupAllEqualKHR"
		args : [
			RTYPE
			RST
			ID "Predicate"
		]
	}
	{
		opcode : 4432
		name : "SubgroupReadInvocationKHR"
		args : [
			RTYPE
			RST
			ID "Value"
			ID "Index"
		]
	}
	{
		opcode : 5000
		name : "GroupIAddNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5001
		name : "GroupFAddNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5002
		name : "GroupFMinNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5003
		name : "GroupUMinNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5004
		name : "GroupSMinNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5005
		name : "GroupFMaxNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5006
		name : "GroupUMaxNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5007
		name : "GroupSMaxNonUniformAMD"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 5571
		name : "SubgroupShuffleINTEL"
		args : [
			RTYPE
			RST
			ID "Data"
			ID "InvocationId"
		]
	}
	{
		opcode : 5572
		name : "SubgroupShuffleDownINTEL"
		args : [
			RTYPE
			RST
			ID "Current"
			ID "Next"
			ID "Delta"
		]
	}
	{
		opcode : 5573
		name : "SubgroupShuffleUpINTEL"
		args : [
			RTYPE
			RST
			ID "Previous"
			ID "Current"
			ID "Delta"
		]
	}
	{
		opcode : 5574
		name : "SubgroupShuffleXorINTEL"
		args : [
			RTYPE
			RST
			ID "Data"
			ID "Value"
		]
	}
	{
		opcode : 5575
		name : "SubgroupBlockReadINTEL"
		args : [
			RTYPE
			RST
			ID "Pointer"
		]
	}
	{
		opcode : 5576
		name : "SubgroupBlockWriteINTEL"
		args : [
			ID "Pointer"
			ID "Data"
		]
	}
	{
		opcode : 5577
		name : "SubgroupImageBlockReadINTEL"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
		]
	}
	{
		opcode : 5578
		name : "SubgroupImageBlockWriteINTEL"
		args : [
			ID "Image"
			ID "Coordinate"
			ID "Data"
		]
	}
	{
		opcode : 5580
		name : "SubgroupImageMediaBlockReadINTEL"
		args : [
			RTYPE
			RST
			ID "Image"
			ID "Coordinate"
			ID "Width"
			ID "Height"
		]
	}
	{
		opcode : 5581
		name : "SubgroupImageMediaBlockWriteINTEL"
		args : [
			ID "Image"
			ID "Coordinate"
			ID "Width"
			ID "Height"
			ID "Data"
		]
	}
	{
		opcode : 291
		name : "EnqueueMarker"
		args : [
			RTYPE
			RST
			ID "Queue"
			ID "NumEvents"
			ID "WaitEvents"
			ID "RetEvent"
		]
	}
	{
		opcode : 292
		name : "EnqueueKernel"
		args : [
			RTYPE
			RST
			ID "Queue"
			ID "Flags"
			ID "NDrange"
			ID "NumEvents"
			ID "WaitEvents"
			ID "RetEvent"
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
			OPT VAR ID "LocalSize"
		]
	}
	{
		opcode : 293
		name : "GetKernelNDrangeSubGroupCount"
		args : [
			RTYPE
			RST
			ID "NDrange"
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 294
		name : "GetKerlenNDrangeMaxSubGroupSize"
		args : [
			RTYPE
			RST
			ID "NDrange"
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 295
		name : "GetKernelWorkGroupSize"
		args : [
			RTYPE
			RST
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 296
		name : "GetKernelPreferredWorkGroupSizeMultiple"
		args : [
			RTYPE
			RST
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 297
		name : "RetainEvent"
		args : [
			ID "Event"
		]
	}
	{
		opcode : 298
		name : "ReleaseEvent"
		args : [
			ID "Event"
		]
	}
	{
		opcode : 299
		name : "CreateUserEvent"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 300
		name : "IsValidEvent"
		args : [
			RTYPE
			RST
			ID "Event"
		]
	}
	{
		opcode : 301
		name : "SetUserEventStatus"
		args : [
			ID "Event"
			ID "Status"
		]
	}
	{
		opcode : 302
		name : "CaptureEventProfilingInfo"
		args : [
			ID "Event"
			ID "ProfilingInfo"
			ID "Value"
		]
	}
	{
		opcode : 303
		name : "GetDefaultQueue"
		args : [
			RTYPE
			RST
		]
	}
	{
		opcode : 304
		name : "BuildNDRange"
		args : [
			RTYPE
			RST
			ID "GlobalWorkSize"
			ID "LocalWorkSize"
			ID "GloablWorkOffset"
		]
	}
	{
		opcode : 325
		name : "GetKernelLocalSizeForSubgroupCount"
		args : [
			RTYPE
			RST
			ID "SubgroupCount"
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 326
		name : "GetKernelMaxNumSubgroups"
		args : [
			RTYPE
			RST
			ID "Invoke"
			ID "Param"
			ID "ParamSize"
			ID "ParamAlign"
		]
	}
	{
		opcode : 274
		name : "ReadPipe"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "Pointer"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 275
		name : "WritePipe"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "Pointer"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 276
		name : "ReservedReadPipe"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "ReservId"
			ID "Index"
			ID "Pointer"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 277
		name : "ReservedWritePipe"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "ReservId"
			ID "Index"
			ID "Pointer"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 278
		name : "ReserveReadPipePackets"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "NumPackets"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 279
		name : "ReserveWritePipePackets"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "NumPackets"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 280
		name : "CommitReadPipe"
		args : [
			ID "Pipe"
			ID "ReserveId"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 281
		name : "CommitWritePipe"
		args : [
			ID "Pipe"
			ID "ReserveId"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 282
		name : "IsValidReserveId"
		args : [
			RTYPE
			RST
			ID "ReserveId"
		]
	}
	{
		opcode : 283
		name : "GetNumPipePackets"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 284
		name : "GetMaxPipePackets"
		args : [
			RTYPE
			RST
			ID "Pipe"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 285
		name : "GroupReserveReadPipePackets"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Pipe"
			ID "NumPackets"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 286
		name : "GroupReserveWritePipePackets"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Pipe"
			ID "NumPackets"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 287
		name : "GroupCommitReadPipe"
		args : [
			SCOPEID
			ID "Pipe"
			ID "ReserveId"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 288
		name : "GroupCommitWritePipe"
		args : [
			SCOPEID
			ID "Pipe"
			ID "ReserveId"
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 323
		name : "ConstantPipeStorage"
		args : [
			RTYPE
			RST
			U32 "PacketSize"
			U32 "PacketAlignment"
			U32 "Capacity"
		]
	}
	{
		opcode : 324
		name : "CreatePipeFromPipeStorage"
		args : [
			RTYPE
			RST
			ID "PipeStorage"
		]
	}
	{
		opcode : 5946
		name : "ReadPipeBlockingINTEL"
		args : [
			RTYPE
			RST
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 5947
		name : "WritePipeBlockingINTEL"
		args : [
			RTYPE
			RST
			ID "PacketSize"
			ID "PacketAlignment"
		]
	}
	{
		opcode : 333
		name : "GroupNonUniformElect"
		args : [
			RTYPE
			RST
			SCOPEID
		]
	}
	{
		opcode : 334
		name : "GroupNonUniformAll"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Predicate"
		]
	}
	{
		opcode : 335
		name : "GroupNonUniformAny"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Predicate"
		]
	}
	{
		opcode : 336
		name : "GroupNonUniformAllEqual"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
		]
	}
	{
		opcode : 337
		name : "GroupNonUniformBroadcast"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "InvocationId"
		]
	}
	{
		opcode : 338
		name : "GroupNonUniformBroadcastFirst"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
		]
	}
	{
		opcode : 339
		name : "GroupNonUniformBallot"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Predicate"
		]
	}
	{
		opcode : 340
		name : "GroupNonUniformInverseBallot"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
		]
	}
	{
		opcode : 341
		name : "GroupNonUniformBallotBitExtract"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "Index"
		]
	}
	{
		opcode : 342
		name : "GroupNonUniformBallotBitCount"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
		]
	}
	{
		opcode : 343
		name : "GroupNonUniformBallotFindLSB"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
		]
	}
	{
		opcode : 344
		name : "GroupNonUniformBallotFindMSB"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
		]
	}
	{
		opcode : 345
		name : "GroupNonUniformShuffle"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "InvocationId"
		]
	}
	{
		opcode : 346
		name : "GroupNonUniformShuffleXor"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "Mask"
		]
	}
	{
		opcode : 347
		name : "GroupNonUniformShuffleUp"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "Delta"
		]
	}
	{
		opcode : 348
		name : "GroupNonUniformShuffleDown"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "Delta"
		]
	}
	{
		opcode : 349
		name : "GroupNonUniformIAdd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 350
		name : "GroupNonUniformFAdd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 351
		name : "GroupNonUniformIMul"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 352
		name : "GroupNonUniformFMul"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 353
		name : "GroupNonUniformSMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 354
		name : "GroupNonUniformUMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 355
		name : "GroupNonUniformFMin"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 356
		name : "GroupNonUniformSMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 357
		name : "GroupNonUniformUMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 358
		name : "GroupNonUniformFMax"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 359
		name : "GroupNonUniformBitwiseAnd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 360
		name : "GroupNonUniformBitwiseOr"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 361
		name : "GroupNonUniformBitwiseXor"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 362
		name : "GroupNonUniformLogicalAnd"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 363
		name : "GroupNonUniformLogicalOr"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 364
		name : "GroupNonUniformLogicalXor"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 365
		name : "GroupNonUniformQuadBroadcast"
		args : [
			RTYPE
			RST
			SCOPEID
			GROUPOPERATION
			ID "Value"
			OPT ID "ClusterSize"
		]
	}
	{
		opcode : 366
		name : "GroupNonUniformQuadSwap"
		args : [
			RTYPE
			RST
			SCOPEID
			ID "Value"
			ID "Direction"
		]
	}
	{
		opcode : 5296
		name : "GroupNonUniformPartitionNV"
		args : [
			RTYPE
			RST
			ID "Value"
		]
	}
]
